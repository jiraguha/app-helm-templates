# Default values for spring-boot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
environment: tests
namespace: default
appName: spring-demo
replicaCount: 2
image:
  repository: registry.gitlab.com/join-up/cross-cutting/health/server-mongo-health-check
  tag: master
  pullPolicy: Always
  ref: none

imagePullSecrets:
  - name: docker-registery-secret
restartPolicy: Always

fullnameOverride: ""

skaffoldEnabled: false
enableDefaultConfig: true

service:
  type: ClusterIP
  port: 80

ingress:
  http:
    enabled: false
#    nameOverride: ""
  grpc:
    enabled: false
  #    nameOverride: ""
  annotations: { }
  stripPath: '"true"'
#  fixme: true by default
  httpsOnly: true
  externalDnsEnabled: true


podAnnotations: {}
#  prometheus.io/scrape: "true"
#  prometheus.io/path: "/actuator/prometheus"

container:
  ## Extra environment variables to be injected
  environment: {}
#    DATABASE_ENGINE: mysql
#    DATABASE_HOST: mysql
#    DATABASE_NAME: spring
#    DATABASE_USERNAME: spring
#    DATABASE_PASSWORD: spring
  ## Exra environment variables from secret to be inject
  secrets: {}
#    - name: mysecret2
#      env:
#        MYVAR3: Key3InMySecret
  defaultSecrets:
    - name: mongo
      env:
        MONGO_CLUSTER_ADDRESS: address
        MONGO_USER: user
        MONGO_PASSWORD: password
    - name: kafka
      env:
        KAFKA_BOOTSTRAP_SERVERS: bootstrapServers
        KAFKA_PASSWORD: password
        KAFKA_USER: user
        KAFKA_USER_INFO: userInfo
        KAFKA_REGISTRY_URL: registryUrl


resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

## uncomment and modify the following livenessProbe and readinessProbe.
## These defaults should work with anything that uses the spring health actuator.
livenessProbe: { }
#   httpGet:
#     path: /actuator/health
#     port: http
#   initialDelaySeconds: 300
#   periodSeconds: 10
readinessProbe: { }
#   httpGet:
#     path: /actuator/health
#     port: http
#   initialDelaySeconds: 60
#   periodSeconds: 10

nodeSelector: { }

tolerations: [ ]

affinity: { }


hpa: { }
#  minReplicas: 2
#  maxReplicas: 4
#  cpuMax: 80
#  memoryMax: 70

podDisruptionBudget: { }
#  minAvailable: 1
