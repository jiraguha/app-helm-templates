apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-boot.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
{{ include "spring-boot.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "spring-boot.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        forcedRef: {{ .Values.image.ref }}
        app.kubernetes.io/name: {{ include "spring-boot.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
    spec:
      serviceAccountName: springboot-app
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: {{.Values.restartPolicy}}
      volumes:
        - configMap:
            name: {{ .Values.appName }}-config-prop
          name: application-kube
        - name: secrets-store-mongo
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "vault-mongo"
        - name: secrets-store-kafka
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "vault-kafka"
        - name: secrets-store-monitoring
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "vault-monitoring"
        - name: secrets-store-auth0
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "vault-auth0"
      containers:
        - name: {{ .Values.appName }}
          image: "{{ include "spring-boot.image" . }}"
          args:
            - --spring.config.additional-location=/application-kube.yml
            - --spring.config.import=optional:configtree:/mnt/config/*/
            - --spring.profiles.active=default,kube
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- $enableDefaultConfig := .Values.enableDefaultConfig }}
          {{- with .Values.container}}
          {{- if or (or .environment .secrets) (and .defaultSecrets $enableDefaultConfig) }}
          env:
            {{- range $key, $value := .environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if and .defaultSecrets $enableDefaultConfig }}
            {{- range .defaultSecrets }}
            {{- $secretName := .name }}
            {{- range $key, $value :=  .env }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ $value }}
          {{- end }}
          {{- end }}
          {{- end }}
            {{- if .secrets }}
            {{- range .secrets }}
            {{- $secretName := .name }}
            {{- range $key, $value := .env }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ $value }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.grpc.port }}
              protocol: TCP
           {{- if .Values.rsocket.port }}
            - name: rsocket
              containerPort: {{ .Values.rsocket.port }}
              protocol: TCP
           {{- end  }}
          ## application-kube
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /application-kube.yml
              name: application-kube
              readOnly: true
              subPath: application-kube.yml
            - name: secrets-store-mongo
              mountPath: "/mnt/config/mongo"
              readOnly: true
            - name: secrets-store-kafka
              mountPath: "/mnt/config/kafka"
              readOnly: true
            - name: secrets-store-monitoring
              mountPath: "/mnt/config/monitoring"
              readOnly: true
            - name: secrets-store-auth0
              mountPath: "/mnt/config/auth0"
              readOnly: true
          {{- if .Values.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
  {{- end }}
