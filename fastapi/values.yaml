# Default values for fastapi
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

certificateIssuer: "letsencrypt-cluster-prod"
environment: dev
mainDnsDomain: example.com
namespace: apps

appName: fastapi-app
replicaCount: 2
image:
  repository: registry.example.com/your-org/fastapi-app
  tag: latest
  pullPolicy: Always
  ref: none

imagePullSecrets: []
  #- name: docker-registry-secret
restartPolicy: Always
serviceAccountName: default
fullnameOverride: ""

skaffoldEnabled: false
logLevel: info

enableDefaultConfig: true
# Ability to manage the app configmap outside this chart
internalConfig: true

service:
  type: ClusterIP
  port: 80

# Application port configuration
http:
  port: 80
  containerPort: 8000  # FastAPI default is 8000

# Ingress configuration
ingress:
  className: kong
  annotations:
    #nginx.ingress.kubernetes.io/ssl-redirect: "true"
    konghq.com/override: https-only
    konghq.com/protocols: https
    konghq.com/strip-path: "true"
  externalDnsEnabled: true

  # Complete hostname override (if set, this exact hostname will be used)
  hostnameOverride: ""
  # Path customization
  path:
    prefix: "/"
    # Use pathType Prefix, Exact, or ImplementationSpecific
    type: "Prefix"

# Configure pod annotations
podAnnotations: {}
#  prometheus.io/scrape: "true"
#  prometheus.io/path: "/metrics"
#  prometheus.io/port: "8000"

# Python specific settings
python: {}
  # command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
  # Set to true to enable Gunicorn for production
  #useGunicorn: false
  # Gunicorn settings (used only if useGunicorn is true)
  #gunicorn:
  #  workers: 4
  #  workerClass: "uvicorn.workers.UvicornWorker"
  #  command: ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "app.main:app", "-b", "0.0.0.0:8000"]

container:
  # Extra environment variables to be injected
  environment: {}
  # Environment variables from secrets
  secrets: {}
  secretsMountPath: /app/config
  secretsVolumes: {}

resources: {}
  # limits:
  #   cpu: 200m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10

nodeSelector: {}

tolerations: []

affinity: {}

hpa: {}
#  minReplicas: 2
#  maxReplicas: 4
#  cpuMax: 80
#  memoryMax: 70

podDisruptionBudget: {}
#  minAvailable: 1